# -*- mode: ruby -*-
# vi: set ft=ruby :
# vagrant plugin install vagrant-cachier

#ENV['VAGRANT_NO_PARALLEL'] = 'yes'

Vagrant.configure("2") do |config|

  config.ssh.insert_key = false
  
      # enable vagrant-cachier plugin if plugin is installed
      if Vagrant.has_plugin?("vagrant-cachier")
          config.cache.auto_detect = true
          config.cache.scope = :box
  #       config.cache.scope = :machine
          config.cache.enable :apt
          config.cache.enable :apt_lists
          config.cache.enable :composer
          config.cache.enable :npm
      end
	
      # K8s master server
      config.vm.define "kmaster" do |kmaster|
          kmaster.vm.box = "ubuntu/xenial64"
          kmaster.vm.hostname = "kmaster.example.com"
          kmaster.vm.network "forwarded_port", guest: 8443, host: 8001
          kmaster.vm.network "private_network", ip: "172.42.42.100"

          kmaster.vm.provider "virtualbox" do |v|
            v.name = "kmaster"
            v.memory = 4096
            v.cpus = 4
          end
      end

      NodeCount = 2
      # Kubernetes Worker Nodes
      (1..NodeCount).each do |i|
        config.vm.define "kworker#{i}" do |workernode|
          workernode.vm.box = "ubuntu/xenial64"
          workernode.vm.hostname = "kworker#{i}.example.com"
          workernode.vm.network "private_network", ip: "172.42.42.10#{i}"
          
          workernode.vm.provider "virtualbox" do |v|
            v.name = "kworker#{i}"
            v.memory = 3072
            v.cpus = 3
          end
        end
      end

  config.vm.provision "ansible_local" do |ansible|
      ansible.verbose = true
      ansible.config_file = "ansible.cfg"
      ansible.playbook = "playbook.yml"
#     ansible.skip_tags = "init-calico"
#     ansible.tags = "reset-kubeadm,init-kubeadm,"
      ansible.groups = {
         masters: ["kmaster"],
         workers: ["kworker1","kworker2"]
        }
   end
end