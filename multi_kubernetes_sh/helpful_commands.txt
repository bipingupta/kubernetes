=============================
Helpful Vagrant Commands
=============================
vagrant up               ==>> # (START) If running first time, runs all tasks within provisioning otherwise just starts the VM and ignores all tasks.
vagrant reload           ==>> # (Re-START) Does not run provisioning but restarts the VM.
vagrant status
vagrant halt             ==>> # (STOP) Shuts Down the running machine.

vagrant suspend          ==>> # (HIBERNATE) This suspends the guest machine Vagrant is managing, rather than fully shutting it down.
vagrant resume           ==>> # (RESUME FROM HIBERNATE)resume the save machine

vagrant destroy -f  ==>> # Stops the running machine Vagrant is managing and destroys all resources that were created during the machine creation process forcefully and without confirmation
vagrant reload --provision  ==>>  # Runs all tasks within provisioning with restarting the VM

vagrant ssh <machine-name>  ==>> # Login to Linux box

vagrant plugin list
vagrant plugin install vagrant-cachier
vagrant plugin install hostmanager
	
=============================
Helpful KUBECTL Commands
=============================
$ kubectl get namespaces
$ kubectl get nodes  -o wide --show-labels --all-namespaces

$ kubectl -n kubernetes-dashboard get svc
$ kubectl get pods
$ kubectl get deployments
$ kubectl get secrets -A
$ kubectl -n kube-system describe secret 
$ kubeadm reset -f
$ kubectl get svc,pods

$ kubectl get ns
$ kubectl describe node
$ kubectl cluster-info
$ route
$ kubectl config view

$ kubectl -n kubernetes-dashboard describe service kubernetes-dashboard
$ kubectl -n kubernetes-dashboard get all

$ kubectl create deployment hello-node --image=k8s.gcr.io/echoserver:1.4

==============================
CHANGINH CLUSTER to NODEPORT
==============================
kubectl -n  kubernetes-dashboard edit service kubernetes-dashboard
change the .spec.type to NodePort
VI EDITOR
(a i o) = Input Mode (Editing Mode)
Esc to Command mode
:wq to save and quit
 
==============================
ACCESSING KUBERNETES DASHBOARD
==============================
https://172.42.42.100:32593/#/login

ps -a
kill -9 <kubectl pid>
nohup kubectl proxy --address='0.0.0.0' --accept-hosts='^*$' &

kubectl get secret -n kubernetes-dashboard $(kubectl get serviceaccount admin-user -n kubernetes-dashboard -o jsonpath="{.secrets[0].name}") -o jsonpath="{.data.token}" | base64 --decode




